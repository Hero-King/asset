import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as r,o as n}from"./app-XKCljP8-.js";const o={};function l(i,e){return n(),t("div",null,[...e[0]||(e[0]=[r('<h1 id="前端图片压缩" tabindex="-1"><a class="header-anchor" href="#前端图片压缩"><span>前端图片压缩</span></a></h1><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><h3 id="filereader" tabindex="-1"><a class="header-anchor" href="#filereader"><span>FileReader</span></a></h3><p>FileReader 对象允许 Web 应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或 Blob 对象指定要读取的文件或数据。</p><ul><li><p>FileReader.readAsDataURL()<br> 开始读取指定的 Blob 中的内容。一旦完成，result 属性中将包含一个 data: URL 格式的 Base64 字符串以表示所读取文件的内容。</p></li><li><p>FileReader.result 只读<br> 文件的内容。该属性仅在读取操作完成后才有效，数据的格式取决于使用哪个方法来启动读取操作。</p></li></ul><h3 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas"><span>Canvas</span></a></h3><ul><li>HTMLCanvasElement.toDataURL()<br> 返回一个数据 URL，该 URL 包含由类型参数指定的格式的图像（默认为 png）。 返回的图像分辨率为 96dpi。</li><li>HTMLCanvasElement.toBlob()<br> 创建一个 Blob 对象，表示 canvas 中包含的图像； 该文件可以由用户代理决定是否缓存在磁盘上或存储在内存中。</li></ul><h3 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h3><blockquote><p><a href="https://blog.csdn.net/qq_42190134/article/details/99238039" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_42190134/article/details/99238039</a><br><a href="https://www.cnblogs.com/ykCoder/p/14156450.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/ykCoder/p/14156450.html</a></p></blockquote>',9)])])}const d=a(o,[["render",l]]),c=JSON.parse('{"path":"/frontEnd/basics/compressImage.html","title":"前端图片压缩","lang":"zh-CN","frontmatter":{"description":"前端图片压缩 基本概念 FileReader FileReader 对象允许 Web 应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或 Blob 对象指定要读取的文件或数据。 FileReader.readAsDataURL() 开始读取指定的 Blob 中的内容。一旦完成，result 属性中将包含一个 data...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端图片压缩\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-22T06:00:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeroKing\\",\\"url\\":\\"https://github.com/Hero-King\\",\\"email\\":\\"838774057@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.heroking.top/frontEnd/basics/compressImage.html"}],["meta",{"property":"og:site_name","content":"HeroKing博客"}],["meta",{"property":"og:title","content":"前端图片压缩"}],["meta",{"property":"og:description","content":"前端图片压缩 基本概念 FileReader FileReader 对象允许 Web 应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或 Blob 对象指定要读取的文件或数据。 FileReader.readAsDataURL() 开始读取指定的 Blob 中的内容。一旦完成，result 属性中将包含一个 data..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-22T06:00:26.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-22T06:00:26.000Z"}]]},"git":{"createdTime":1758520826000,"updatedTime":1758520826000,"contributors":[{"name":"HeroKing-web","username":"HeroKing-web","email":"838774057@qq.com","commits":1,"url":"https://github.com/HeroKing-web"}]},"readingTime":{"minutes":0.83,"words":248},"filePathRelative":"frontEnd/basics/compressImage.md","excerpt":"\\n<h2>基本概念</h2>\\n<h3>FileReader</h3>\\n<p>FileReader 对象允许 Web 应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或 Blob 对象指定要读取的文件或数据。</p>\\n<ul>\\n<li>\\n<p>FileReader.readAsDataURL()<br>\\n开始读取指定的 Blob 中的内容。一旦完成，result 属性中将包含一个 data: URL 格式的 Base64 字符串以表示所读取文件的内容。</p>\\n</li>\\n<li>\\n<p>FileReader.result 只读<br>\\n文件的内容。该属性仅在读取操作完成后才有效，数据的格式取决于使用哪个方法来启动读取操作。</p>\\n</li>\\n</ul>","autoDesc":true}');export{d as comp,c as data};
