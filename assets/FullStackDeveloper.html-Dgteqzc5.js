import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as r,o as s}from"./app-e59U58JH.js";const a={};function i(o,e){return s(),n("div",null,[...e[0]||(e[0]=[r('<h1 id="全栈" tabindex="-1"><a class="header-anchor" href="#全栈"><span>全栈</span></a></h1><p>如何成为一个全栈工程师? 前端开发何去何从</p><h2 id="js-框架概览" tabindex="-1"><a class="header-anchor" href="#js-框架概览"><span>JS 框架概览</span></a></h2><h3 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h3><ul><li>nuxt.js 用于 Vue 服务端渲染, 静态站点的框架</li><li>next.js 用于 React 服务端渲染,静态站点,客户端渲染的框架</li></ul><h3 id="后端" tabindex="-1"><a class="header-anchor" href="#后端"><span>后端</span></a></h3><ul><li>express</li><li>nest 基于 express,类似于 spring 框架, Nest.js 是一个基于 TypeScript 的 Node.js 后端框架，它结合了 OOP（面向对象编程）、FP（函数式编程）和 FRP（函数式响应式编程）等概念，提供了一个优雅且强大的开发平台。</li></ul><h4 id="nodejs-orm-框架" tabindex="-1"><a class="header-anchor" href="#nodejs-orm-框架"><span>nodejs orm 框架</span></a></h4><ul><li>TypeORM 是一个面向 TypeScript 和 JavaScript 的 ORM 框架，它支持多种数据库，包括 MySQL、PostgreSQL、SQLite 和 Microsoft SQL Server。它提供了实体映射、关联关系、事务支持等功能。</li><li>Sequelize: Sequelize 是一个基于 Promise 的 ORM 框架，支持多种数据库，包括 MySQL、PostgreSQL、SQLite 和 MSSQL。它提供了丰富的功能，包括模型定义、关联关系、事务支持、数据验证等</li></ul><h2 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h2><ul><li>nestjs + typeorm + mysql 进阶后端开发 <code>npm install --save @nestjs/typeorm typeorm mysql2</code></li></ul><p><a href="./frameworks/Nestjs">NestJs</a></p>',12)])])}const c=t(a,[["render",i]]),h=JSON.parse('{"path":"/frontEnd/FullStackDeveloper.html","title":"全栈","lang":"zh-CN","frontmatter":{"icon":"battery-full","description":"全栈 如何成为一个全栈工程师? 前端开发何去何从 JS 框架概览 前端 nuxt.js 用于 Vue 服务端渲染, 静态站点的框架 next.js 用于 React 服务端渲染,静态站点,客户端渲染的框架 后端 express nest 基于 express,类似于 spring 框架, Nest.js 是一个基于 TypeScript 的 Node....","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"全栈\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-21T14:02:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeroKing\\",\\"url\\":\\"https://github.com/Hero-King\\",\\"email\\":\\"838774057@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.heroking.top/frontEnd/FullStackDeveloper.html"}],["meta",{"property":"og:site_name","content":"HeroKing博客"}],["meta",{"property":"og:title","content":"全栈"}],["meta",{"property":"og:description","content":"全栈 如何成为一个全栈工程师? 前端开发何去何从 JS 框架概览 前端 nuxt.js 用于 Vue 服务端渲染, 静态站点的框架 next.js 用于 React 服务端渲染,静态站点,客户端渲染的框架 后端 express nest 基于 express,类似于 spring 框架, Nest.js 是一个基于 TypeScript 的 Node...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-21T14:02:37.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-21T14:02:37.000Z"}]]},"git":{"createdTime":1758463357000,"updatedTime":1758463357000,"contributors":[{"name":"HeroKingMini","username":"HeroKingMini","email":"838774057@qq.com","commits":1,"url":"https://github.com/HeroKingMini"}]},"readingTime":{"minutes":0.89,"words":267},"filePathRelative":"frontEnd/FullStackDeveloper.md","excerpt":"\\n<p>如何成为一个全栈工程师? 前端开发何去何从</p>\\n<h2>JS 框架概览</h2>\\n<h3>前端</h3>\\n<ul>\\n<li>nuxt.js 用于 Vue 服务端渲染, 静态站点的框架</li>\\n<li>next.js 用于 React 服务端渲染,静态站点,客户端渲染的框架</li>\\n</ul>\\n<h3>后端</h3>\\n<ul>\\n<li>express</li>\\n<li>nest 基于 express,类似于 spring 框架, Nest.js 是一个基于 TypeScript 的 Node.js 后端框架，它结合了 OOP（面向对象编程）、FP（函数式编程）和 FRP（函数式响应式编程）等概念，提供了一个优雅且强大的开发平台。</li>\\n</ul>","autoDesc":true}');export{c as comp,h as data};
