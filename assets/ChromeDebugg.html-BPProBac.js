import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as o,o as l}from"./app-BqIpQNrN.js";const n={};function r(a,e){return l(),i("div",null,[...e[0]||(e[0]=[o('<h1 id="chrome-调试技巧" tabindex="-1"><a class="header-anchor" href="#chrome-调试技巧"><span>Chrome 调试技巧</span></a></h1><h2 id="控制台" tabindex="-1"><a class="header-anchor" href="#控制台"><span>控制台</span></a></h2><ul><li>$ document.querySelector 简写</li><li>$$ document.querySelectorAll 简写</li><li>$0 返回鼠标在 element Tab 页面中选中的 dom 元素</li><li>$_ 返回控制台上一次执行结果</li><li>console.time(&quot;XXX&quot;) timeEnd(&quot;XXX&quot;) XXX tag 耗时</li><li>console.dir console.table</li><li>getEventListeners(DOM 元素) 获取 DOM 元素身上的事件 getEventListeners(window) 获取 window 上绑定的事件</li><li>切换Top上下文后，可以在控制台中访问切换后上下文的内容；变量</li><li>小眼睛：监听表达式的值</li></ul><h2 id="element" tabindex="-1"><a class="header-anchor" href="#element"><span>Element</span></a></h2><ul><li>直接拖动元素</li><li>h 快捷键 隐藏元素</li><li>使用 ctrl + 上下箭头 来移动元素!</li><li>选中 dom 元素 break on 设置断点 当元素被改变/删除等操作是 进入断点</li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source"><span>source</span></a></h2><h3 id="代码栏右侧" tabindex="-1"><a class="header-anchor" href="#代码栏右侧"><span>代码栏右侧</span></a></h3><ul><li>Watch 观察数据/表达式</li><li>Call Stack 调用栈 可以查看哪个事件、方法走到当前断点</li><li>BreakPoints 断点管理</li><li>XHR/Fetch BreakPoints 设置 Ajax 请求断点 URL 包括某个字段进入断点</li><li>Global Listeners 全局事件列表及注册点</li><li>Event Listener BreakPoints 指定某个事件断点,当触发事件时, 会自动进入到事件响应函数中</li><li>debugger时候可以在控制台中访问局部变量</li></ul><h2 id="快捷键" tabindex="-1"><a class="header-anchor" href="#快捷键"><span>快捷键</span></a></h2><ul><li>ctrl + shift + p 打开命令行<br> clear site data 清除网站数据 Cookies、WebSQL、Service Workers、Cache Storage、IndexedDB、Local Storage、Application Cache</li><li>ctrl + p 查找文件</li><li>ctrl + shift + i 打开控制台</li><li>alt + 便签展开的小箭头 展开某标签下所有层级的标签</li><li>ctrl + [ / ] 前后切换 devtools tab 页</li></ul><h2 id="more-tools" tabindex="-1"><a class="header-anchor" href="#more-tools"><span>More Tools</span></a></h2><ul><li>Animations 调试动画利器</li></ul>',12)])])}const m=t(n,[["render",r]]),d=JSON.parse('{"path":"/frontEnd/basics/ChromeDebugg.html","title":"Chrome 调试技巧","lang":"zh-CN","frontmatter":{"description":"Chrome 调试技巧 控制台 $ document.querySelector 简写 $$ document.querySelectorAll 简写 $0 返回鼠标在 element Tab 页面中选中的 dom 元素 $_ 返回控制台上一次执行结果 console.time(\\"XXX\\") timeEnd(\\"XXX\\") XXX tag 耗时 cons...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Chrome 调试技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-07T06:23:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeroKing\\",\\"url\\":\\"https://github.com/Hero-King\\",\\"email\\":\\"838774057@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.heroking.top/frontEnd/basics/ChromeDebugg.html"}],["meta",{"property":"og:site_name","content":"HeroKing博客"}],["meta",{"property":"og:title","content":"Chrome 调试技巧"}],["meta",{"property":"og:description","content":"Chrome 调试技巧 控制台 $ document.querySelector 简写 $$ document.querySelectorAll 简写 $0 返回鼠标在 element Tab 页面中选中的 dom 元素 $_ 返回控制台上一次执行结果 console.time(\\"XXX\\") timeEnd(\\"XXX\\") XXX tag 耗时 cons..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T06:23:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T06:23:39.000Z"}]]},"git":{"createdTime":1757226219000,"updatedTime":1757226219000,"contributors":[{"name":"HeroKingMini","username":"HeroKingMini","email":"838774057@qq.com","commits":1,"url":"https://github.com/HeroKingMini"}]},"readingTime":{"minutes":1.25,"words":375},"filePathRelative":"frontEnd/basics/ChromeDebugg.md","excerpt":"\\n<h2>控制台</h2>\\n<ul>\\n<li>$ document.querySelector 简写</li>\\n<li>$$ document.querySelectorAll 简写</li>\\n<li>$0 返回鼠标在 element Tab 页面中选中的 dom 元素</li>\\n<li>$_ 返回控制台上一次执行结果</li>\\n<li>console.time(\\"XXX\\") timeEnd(\\"XXX\\") XXX tag 耗时</li>\\n<li>console.dir console.table</li>\\n<li>getEventListeners(DOM 元素) 获取 DOM 元素身上的事件 getEventListeners(window) 获取 window 上绑定的事件</li>\\n<li>切换Top上下文后，可以在控制台中访问切换后上下文的内容；变量</li>\\n<li>小眼睛：监听表达式的值</li>\\n</ul>","autoDesc":true}');export{m as comp,d as data};
