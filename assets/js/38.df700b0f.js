(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{451:function(t,a,s){"use strict";s.r(a);var r=s(33),_=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"web-性能权威指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-性能权威指南"}},[t._v("#")]),t._v(" Web 性能权威指南")]),t._v(" "),a("h2",{attrs:{id:"延迟和带宽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟和带宽"}},[t._v("#")]),t._v(" 延迟和带宽")]),t._v(" "),a("p",[t._v("延迟(分组从信息员发送到目的地的所需的时间)")]),t._v(" "),a("ul",[a("li",[t._v("传播延迟 消息从发送端到接收端需要的时间,是传播距离和速度的函数")]),t._v(" "),a("li",[t._v("传输延迟 把消息中所有的比特转移到线路中需要的时间")]),t._v(" "),a("li",[t._v("处理延迟 处理分组首部 检查位错误以及确定分组目标所需的时间")]),t._v(" "),a("li",[t._v("排队延迟 到来的分组排队等待的时间\n查看可以使用 traceroute 命令\nCDN 网络最重要的就是通过把内容部署到全国各地,让用户从最近的服务器加载内容,大幅降低传播分组的时间\n带宽(逻辑或者物理通信路径最大的吞吐量)")])]),t._v(" "),a("h2",{attrs:{id:"tcp-的构成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的构成"}},[t._v("#")]),t._v(" TCP 的构成")]),t._v(" "),a("p",[t._v("TCP 负责在不可靠地传输信道上提供可靠的抽象层,向应用层隐藏了大多数网络通信的复杂细节,\n比如丢包重发,按序发送,拥塞控制及避免,数据完整等,采用 TCP 数据流能够确保发送的所有字节能够\n完整的被接收到,而且到达客户端的顺序也一样\n注: HTTP 并没有规定 TCP 就是唯一的传输协议,如果你愿意,使用 UDP 或者其他协议也 OK")]),t._v(" "),a("h3",{attrs:{id:"三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/http/TCP三次握手.png")}}),t._v("\n三次握手完成后,客户端和服务器就可以通信了,客户端可以在发送 ACK 分组之后立即发送数据, 而服务器必须等到接收到\nACK 分组之后才能发送数据. 这个启动通信是所有使用 TCP 都需要的过程,具有非常大的性能影响\n在距离相当远的情况下(延迟就高),三次握手的时间就比较长,每创建一个 TCP 连接的代价就很高,这就要求想办法复用连接\n"),a("h3",{attrs:{id:"拥塞预防和控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拥塞预防和控制"}},[t._v("#")]),t._v(" 拥塞预防和控制")]),t._v(" "),a("h4",{attrs:{id:"流量控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流量控制"}},[t._v("#")]),t._v(" 流量控制")]),t._v(" "),a("p",[t._v("预防发送端过多的向接收端发送数据的机制,否则,接收端可能因为忙碌/负载重/缓冲区既定而无法处理. 为实现流量控制,\nTCP 连接的每一方都需要通告自己的接受窗口(rwnd),其中包含能够保存数据的缓冲区空间大小信息")]),t._v(" "),a("p",[t._v("第一次建立连接的时候,双方都会使用自身系统默认设置发送 rwnd,浏览器请求服务器向客户端下载数据, 客户端窗口更可能称为瓶颈,\n上传图片或者视频时候,服务端窗口更可能成为瓶颈, 不管怎样, 其中一端跟不上数据传输,那他可以向发送端通告一个较小的窗口,\n假如窗口为零,必须由应用层先清空缓冲区,在接受剩余数据\n窗口缩放信息查看: sysctl net.ipv4.tcp_window_scaling")]),t._v(" "),a("h4",{attrs:{id:"慢启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#慢启动"}},[t._v("#")]),t._v(" 慢启动")]),t._v(" "),a("p",[t._v("发送端和服务端在连接建立之初,谁也不知道可用带宽是多少,因此需要一个估算机制,然后根据网络中不断变化的条件动态改变速度")])])}),[],!1,null,null,null);a.default=_.exports}}]);