import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as t,a as o,o as i}from"./app-e59U58JH.js";const s={},p=["src"];function c(r,e){return i(),n("div",null,[e[0]||(e[0]=t('<h1 id="web-性能权威指南" tabindex="-1"><a class="header-anchor" href="#web-性能权威指南"><span>Web 性能权威指南</span></a></h1><h2 id="延迟和带宽" tabindex="-1"><a class="header-anchor" href="#延迟和带宽"><span>延迟和带宽</span></a></h2><p>延迟(分组从信息员发送到目的地的所需的时间)</p><ul><li>传播延迟 消息从发送端到接收端需要的时间,是传播距离和速度的函数</li><li>传输延迟 把消息中所有的比特转移到线路中需要的时间</li><li>处理延迟 处理分组首部 检查位错误以及确定分组目标所需的时间</li><li>排队延迟 到来的分组排队等待的时间<br> 查看可以使用 traceroute 命令<br> CDN 网络最重要的就是通过把内容部署到全国各地,让用户从最近的服务器加载内容,大幅降低传播分组的时间<br> 带宽(逻辑或者物理通信路径最大的吞吐量)</li></ul><h2 id="tcp-的构成" tabindex="-1"><a class="header-anchor" href="#tcp-的构成"><span>TCP 的构成</span></a></h2><p>TCP 负责在不可靠地传输信道上提供可靠的抽象层,向应用层隐藏了大多数网络通信的复杂细节,<br> 比如丢包重发,按序发送,拥塞控制及避免,数据完整等,采用 TCP 数据流能够确保发送的所有字节能够<br> 完整的被接收到,而且到达客户端的顺序也一样<br> 注: HTTP 并没有规定 TCP 就是唯一的传输协议,如果你愿意,使用 UDP 或者其他协议也 OK</p><h3 id="三次握手" tabindex="-1"><a class="header-anchor" href="#三次握手"><span>三次握手</span></a></h3>',7)),o("img",{src:r.$withBase("/img/http/TCP三次握手.png")},null,8,p),e[1]||(e[1]=t(' 三次握手完成后,客户端和服务器就可以通信了,客户端可以在发送 ACK 分组之后立即发送数据, 而服务器必须等到接收到 ACK 分组之后才能发送数据. 这个启动通信是所有使用 TCP 都需要的过程,具有非常大的性能影响 在距离相当远的情况下(延迟就高),三次握手的时间就比较长,每创建一个 TCP 连接的代价就很高,这就要求想办法复用连接 <h3 id="拥塞预防和控制" tabindex="-1"><a class="header-anchor" href="#拥塞预防和控制"><span>拥塞预防和控制</span></a></h3><h4 id="流量控制" tabindex="-1"><a class="header-anchor" href="#流量控制"><span>流量控制</span></a></h4><p>预防发送端过多的向接收端发送数据的机制,否则,接收端可能因为忙碌/负载重/缓冲区既定而无法处理. 为实现流量控制,<br> TCP 连接的每一方都需要通告自己的接受窗口(rwnd),其中包含能够保存数据的缓冲区空间大小信息</p><p>第一次建立连接的时候,双方都会使用自身系统默认设置发送 rwnd,浏览器请求服务器向客户端下载数据, 客户端窗口更可能称为瓶颈,<br> 上传图片或者视频时候,服务端窗口更可能成为瓶颈, 不管怎样, 其中一端跟不上数据传输,那他可以向发送端通告一个较小的窗口,<br> 假如窗口为零,必须由应用层先清空缓冲区,在接受剩余数据<br> 窗口缩放信息查看: sysctl net.ipv4.tcp_window_scaling</p><h4 id="慢启动" tabindex="-1"><a class="header-anchor" href="#慢启动"><span>慢启动</span></a></h4><p>发送端和服务端在连接建立之初,谁也不知道可用带宽是多少,因此需要一个估算机制,然后根据网络中不断变化的条件动态改变速度</p>',7))])}const d=a(s,[["render",c]]),m=JSON.parse('{"path":"/books/HighPerformanceBrowserNetworking.html","title":"Web 性能权威指南","lang":"zh-CN","frontmatter":{"description":"Web 性能权威指南 延迟和带宽 延迟(分组从信息员发送到目的地的所需的时间) 传播延迟 消息从发送端到接收端需要的时间,是传播距离和速度的函数 传输延迟 把消息中所有的比特转移到线路中需要的时间 处理延迟 处理分组首部 检查位错误以及确定分组目标所需的时间 排队延迟 到来的分组排队等待的时间 查看可以使用 traceroute 命令 CDN 网络最重...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Web 性能权威指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-21T14:02:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeroKing\\",\\"url\\":\\"https://github.com/Hero-King\\",\\"email\\":\\"838774057@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.heroking.top/books/HighPerformanceBrowserNetworking.html"}],["meta",{"property":"og:site_name","content":"HeroKing博客"}],["meta",{"property":"og:title","content":"Web 性能权威指南"}],["meta",{"property":"og:description","content":"Web 性能权威指南 延迟和带宽 延迟(分组从信息员发送到目的地的所需的时间) 传播延迟 消息从发送端到接收端需要的时间,是传播距离和速度的函数 传输延迟 把消息中所有的比特转移到线路中需要的时间 处理延迟 处理分组首部 检查位错误以及确定分组目标所需的时间 排队延迟 到来的分组排队等待的时间 查看可以使用 traceroute 命令 CDN 网络最重..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-21T14:02:37.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-21T14:02:37.000Z"}]]},"git":{"createdTime":1758463357000,"updatedTime":1758463357000,"contributors":[{"name":"HeroKingMini","username":"HeroKingMini","email":"838774057@qq.com","commits":1,"url":"https://github.com/HeroKingMini"}]},"readingTime":{"minutes":2.67,"words":802},"filePathRelative":"books/HighPerformanceBrowserNetworking.md","excerpt":"\\n<h2>延迟和带宽</h2>\\n<p>延迟(分组从信息员发送到目的地的所需的时间)</p>\\n<ul>\\n<li>传播延迟 消息从发送端到接收端需要的时间,是传播距离和速度的函数</li>\\n<li>传输延迟 把消息中所有的比特转移到线路中需要的时间</li>\\n<li>处理延迟 处理分组首部 检查位错误以及确定分组目标所需的时间</li>\\n<li>排队延迟 到来的分组排队等待的时间<br>\\n查看可以使用 traceroute 命令<br>\\nCDN 网络最重要的就是通过把内容部署到全国各地,让用户从最近的服务器加载内容,大幅降低传播分组的时间<br>\\n带宽(逻辑或者物理通信路径最大的吞吐量)</li>\\n</ul>","autoDesc":true}');export{d as comp,m as data};
